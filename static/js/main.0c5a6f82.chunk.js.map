{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","services/UserByld.ts","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","TodoList","todos","map","App","useState","todosFromServer","length","count","setCount","setTodos","initialFormForTodo","form","setForm","hasTitleError","setHasTitleError","hasUserError","setHasUserError","handleChange","value","field","prevForm","action","method","onSubmit","event","preventDefault","trim","tds","data","newTodo","Math","max","currentTodo","addTodo","htmlFor","type","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c5a6f82.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { getUserById } from '../../services/UserByld';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo\n      ${todo.completed && ('TodoInfo--completed')}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={getUserById(todo.userId)} />\n    </article>\n  );\n};\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/todo';\n\nexport const App = () => {\n  const [count, setCount] = useState(todosFromServer.length);\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const initialFormForTodo = {\n    id: count,\n    title: '',\n    completed: false,\n    userId: 0,\n  };\n  const [form, setForm] = useState(initialFormForTodo);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  function getNewTodoId(tds: Todo[]) {\n    return Math.max(...tds.map(todo => todo.id)) + 1;\n  }\n\n  const addTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: getNewTodoId(todos),\n      ...data,\n    };\n\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  const handleChange = (value: string | number, field: string) => {\n    setForm(prevForm => ({\n      ...prevForm,\n      [field]: value,\n    }));\n\n    switch (field) {\n      case 'title':\n        setHasTitleError(false);\n        break;\n      case 'userId':\n        setHasUserError(false);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setHasTitleError(!form.title.trim());\n    setHasUserError(!form.userId);\n    if (!form.title.trim() || !form.userId) {\n      return;\n    }\n\n    addTodo(form);\n    setForm(initialFormForTodo);\n    setCount(count + 1);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"todoTitle\"\n          >\n            Title:\n          </label>\n          <input\n            id=\"todoTitle\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={form.title}\n            onChange={event => handleChange(event.target.value, 'title')}\n            placeholder=\"Enter a title\"\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"todoUser\"\n          >\n            User:\n          </label>\n          <select\n            id=\"todoUser\"\n            data-cy=\"userSelect\"\n            value={form.userId}\n            onChange={event => handleChange(+event.target.value, 'userId')}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}